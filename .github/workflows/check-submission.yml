on:

  workflow_call:
    inputs:

      repository:
        required: true
        description: Full name (owner/repo-name) to be checked
        type: string

      ref:
        required: true
        description: Git ref to be checked
        type: string

      reproducible-document:
        required: false
        description: Path to reproducible document, if any
        default: ''
        type: string

      quarto-render-args:
        required: false
        description: Extra args/options for the quarto render command
        default: --to html -M self-contained:true --execute
        type: string

      container-registry:
        description: If set, container image will be pushed to this registry
        type: string
        required: false
        default: ghcr.io

  workflow_dispatch:
    inputs:

      repository:
        required: true
        description: Full name (owner/repo-name) to be checked
        type: string

      ref:
        required: true
        description: Git ref to be checked
        type: string

      reproducible-document:
        required: false
        description: Path to reproducible document, if any
        default: ''
        type: string

      quarto-render-args:
        required: false
        description: Extra args/options for the quarto render command
        default: --to html -M self-contained:true --execute
        type: string

      container-registry:
        description: If set, container image will be pushed to this registry
        type: string
        required: false
        default: ghcr.io

      binder-cache-branch:
        description: If given, the built container image will be written to .binder/Dockerfile and pushed to this branch
        type: string
        required: false
        default: ''

jobs:

  repo2docker-build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}

      - name: Run quarto render
        if: inputs.reproducible-document
        run: |
          cat << 'EOF' > postBuild
          #!/bin/bash
          set -e
          set -o pipefail
          pushd "$(mktemp -d)"
          QUARTO_RELEASE="1.3.361"
          INSTALL_DIR="$HOME/opt/quarto"
          BIN_DIR="$HOME/.local/bin"
          mkdir -p "$INSTALL_DIR" "$BIN_DIR"
          wget "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_RELEASE}/quarto-${QUARTO_RELEASE}-linux-amd64.tar.gz"
          tar -C "$INSTALL_DIR" -xvzf "quarto-${QUARTO_RELEASE}-linux-amd64.tar.gz"
          ln -s "${INSTALL_DIR}/quarto-${QUARTO_RELEASE}/bin/quarto" "${BIN_DIR}/quarto"
          which -a quarto
          quarto check
          popd

          quarto render "${{ inputs.reproducible-document }}" ${{ inputs.quarto-render-args }}
          EOF
          cat postBuild

      - uses: jupyterhub/repo2docker-action@b3cd89ff99f95b00abb5b4db27ec49bb4d3f8c85
        id: repo2docker
        with:
          NO_PUSH: ${{ inputs.container-registry && 'false' || 'true' }}
          DOCKER_REGISTRY: ${{ inputs.container-registry }}
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_NAME: ${{ inputs.repository }}
          MYBINDERORG_TAG: ${{ inputs.ref }}
          BINDER_CACHE: "false"  # done separately outside of this action to allow customizing branch

      - name: Create new branch containing Binder dockerfile
        if: inputs.binder-cache-branch
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global push.autoSetupRemote true
          git switch --force-create ${{ inputs.binder-cache-branch }}
          mkdir -p .binder

          cat << 'EOF' > .binder/Dockerfile
          FROM ${{ inputs.container-registry }}/${{ steps.repo2docker.outputs.IMAGE_SHA_NAME }}
          EOF

          git add .binder/Dockerfile
          git commit -m "Update image tag"
          git push -f

  notify:
    needs: [repo2docker-build]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:

      - name: Notify build failure
        if: ${{ needs.repo2docker-build.result == 'failure' }}
        run: |
          cat << 'EOF' > $GITHUB_STEP_SUMMARY
          The CI build was not successful for ${{ inputs.repository }}@${{ inputs.ref }}.

          See the following resources for details:
          
          - <https://github.com/USRSE/usrse23/wiki/notebooks-submissions>

          EOF

      - name: Notify build success
        if: ${{ needs.repo2docker-build.result == 'success' }}
        run: |
          cat << 'EOF' >> $GITHUB_STEP_SUMMARY
          The CI build was successful for ${{ inputs.repository }}@${{ inputs.ref }}!

          [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/${{ inputs.repository }}/${{ inputs.ref}}) :point_left: Launch a binder notebook on this branch

          EOF
